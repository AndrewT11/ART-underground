{"version":3,"sources":["utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ArtworkItem/index.js","utils/queries.js","assets/spinner.gif","components/ArtworkList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","components/Carousel/ImageCarousel.js","pages/Home.js","pages/Detail.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","components/Jumbotron/index.js","pages/Success.js","pages/OrderHistory.js","pages/ContactForm.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_ARTWORKS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","reducer","state","action","type","artworks","cartOpen","cart","artwork","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","useReducer","dispatch","useStoreContext","useContext","ArtworkItem","item","image","price","quantity","className","to","alt","src","onClick","itemInCart","find","cartItem","parseInt","QUERY_ARTWORKS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ArtworkList","useQuery","loading","data","useEffect","forEach","then","category","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","a","getCart","sum","toFixed","calculateTotal","Auth","loggedIn","artworkIds","i","push","variables","width","ImageCarousel","useState","sliderRef","setSliderRef","images","imageSrc","title","description","artist","pricingText","slickPrev","slickNext","ref","infinite","slidesToShow","slidesToScroll","arrows","lazyLoad","responsive","breakpoint","settings","slideToShow","index","Home","Detail","useParams","currentArtwork","setCurrentArtwork","indexedArtworks","disabled","p","LOGIN","ADD_ORDER","ADD_USER","Login","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","Jumbotron","children","style","height","clear","paddingTop","textAlign","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","ContactForm","useForm","register","handleSubmit","reset","errors","subject","message","templateParams","emailjs","send","process","REACT_APP_SERVICE_ID","REACT_APP_TEMPLATE_ID","REACT_APP_USER_ID","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toastId","noValidate","required","maxLength","pattern","rows","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e8a020a4.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('artworks', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_ARTWORKS = \"UPDATE_ARTWORKS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from 'react';\nimport {\n  UPDATE_ARTWORKS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART,\n} from './actions';\n\n// The reducer is a function that accepts the current state and an action. It returns a new state based on that action.\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    // Returns a copy of state with an update artworks array. We use the action.artworks property and spread it's contents into the new array.\n    case UPDATE_ARTWORKS:\n      return {\n        ...state,\n        artworks: [...action.artworks],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.artwork],\n      };\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.artworks],\n      };\n    // Returns a copy of state, sets the cartOpen to true and maps through the items in the cart.\n    // If the item's `id` matches the `id` that was provided in the action.payload, we update the purchase quantity.\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map((artwork) => {\n          if (action._id === artwork._id) {\n            artwork.purchaseQuantity = action.purchaseQuantity;\n          }\n          return artwork;\n        }),\n      };\n\n    // First we iterate through each item in the cart and check to see if the `artwork._id` matches the `action._id`\n    // If so, we remove it from our cart and set the updated state to a variable called `newState`\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter((artwork) => {\n        return artwork._id !== action._id;\n      });\n\n      // Then we return a copy of state and check to see if the cart is empty.\n      // If not, we set the cartOpen status to  `true`. Then we return an updated cart array set to the value of `newState`.\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState,\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: [],\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen,\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory,\n      };\n\n    // Return the state as is in the event that the `action.type` passed to our reducer was not accounted for by the developers\n    // This saves us from a crash.\n    default:\n      return state;\n  }\n};\n\nexport function useArtworkReducer(initialState) {\n  return useReducer(reducer, initialState);\n}\n","import React, { createContext, useContext } from \"react\";\nimport { useArtworkReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useArtworkReducer({\n    artworks: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ArtworkItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        artwork: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <div className=\"card-img\">\n      <p>{name}</p>\n      <Link to={`/artworks/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n       <p>{name}</p>\n      </Link>\n      </div>\n      <div className=\"item-deets\">\n      \n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      \n      <button onClick={addToCart}>Add</button>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default ArtworkItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_ARTWORKS = gql`\n  query getArtworks($category: ID) {\n    artworks(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($artworks: [ID]!) {\n    checkout(artworks: $artworks) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_ARTWORKS = gql`\n  {\n    artworks {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        artworks {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.689d9a07.gif\";","import React, { useEffect } from \"react\";\nimport ArtworkItem from \"../ArtworkItem\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { UPDATE_ARTWORKS } from \"../../utils/actions\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ARTWORKS } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport spinner from \"../../assets/spinner.gif\";\n\n\nfunction ArtworkList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_ARTWORKS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_ARTWORKS,\n        artworks: data.artworks,\n      });\n      data.artworks.forEach((artwork) => {\n        idbPromise(\"artworks\", \"put\", artwork);\n      });\n    } else if (!loading) {\n      idbPromise(\"artworks\", \"get\").then((artworks) => {\n        dispatch({\n          type: UPDATE_ARTWORKS,\n          artworks: artworks,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterArtworks() {\n    if (!currentCategory) {\n      return state.artworks;\n    }\n\n    return state.artworks.filter(\n      (artwork) => artwork.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Artwork:</h2>\n      {state.artworks.length ? (\n        <div className=\"flex-row\">\n          {filterArtworks().map((artwork) => (\n            <ArtworkItem\n              key={artwork._id}\n              _id={artwork._id}\n              image={artwork.image}\n              name={artwork.name}\n              price={artwork.price}\n              quantity={artwork.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any artworks yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ArtworkList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            \n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport \"./style.css\";\n\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({ type: ADD_MULTIPLE_TO_CART, artworks: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const artworkIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        artworkIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { artworks: artworkIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"mouse\">\n          <p>CART</p>\n          <img\n            src=\"../../images/LightMode_Mouse.png\"\n            alt=\"mouse\"\n            width=\"43px\"\n          ></img>\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close] X\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row-cart space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React, { useState } from \"react\";\nimport Slider from \"react-slick\";\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from \"react-icons/fa\";\n\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"./Carousel.css\";\n\nexport default function ImageCarousel() {\n  const [sliderRef, setSliderRef] = useState(null);\n\n  const sliderSettings = {\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    arrows: false,\n    lazyLoad: true,\n    responsive: [\n      {\n        breakpoint: 1024,\n        settings: {\n          slideToShow: 2,\n        },\n      },\n      {\n        breakpoint: 800,\n        settings: {\n          slidesToShow: 1,\n        },\n      },\n    ],\n    // arrows: false,\n    // slidesToShow: 3,\n    // slidesToScroll: 1,\n    // infinite: false,\n    // responsive: [\n    //   {\n    //     breakpoint: 1024,\n    //     settings: {\n    //       slidesToShow: 2,\n    //     },\n    //   },\n    //   {\n    //     breakpoint: 800,\n    //     settings: {\n    //       slidesToShow: 1,\n    //     },\n    //   },\n    // ],\n  };\n\n  const images = [\n    {\n      id: 1,\n      imageSrc: \"./images/DA_CoolGuy.JPG\",\n      alt: \"Cool Guy\",\n      title: \"Cool Guy\",\n      description: \"A cool looking guy\",\n      artist: \"Valerie Brisendine\",\n    },\n    {\n      id: 2,\n      imageSrc: \"./images/DG_BaduSpider.JPG\",\n      alt: \"Alice in Wonderland\",\n      title: \"Alice in Wonderland\",\n      description: \"Alice in Wonderland\",\n      artist: \"Andrew Tran\",\n    },\n    {\n      id: 3,\n      imageSrc: \"./images/DA_HalfFace.JPG\",\n      alt: \"Half Face\",\n      title: \"Half Face\",\n      description: \"A guy with half a face\",\n      artist: \"Valerie Brisendine\",\n    },\n    {\n      id: 4,\n      imageSrc: \"./images/DA_TattooLady.JPG\",\n      alt: \"Tattoo Lady\",\n      title: \"Tattoo Lady\",\n      description: \"A lady with tattoos\",\n      artist: \"Valerie Brisendine\",\n    },\n    {\n      id: 5,\n      imageSrc: \"./images/MM_Neptune.JPG\",\n      alt: \"Neptune\",\n      title: \"Neptune\",\n      description: \"Neptune\",\n      artist: \"Valerie Brisendine\",\n    },\n    {\n      id: 6,\n      imageSrc: \"./images/PG_Waterfall.JPG\",\n      alt: \"Waterfall\",\n      title: \"Waterfall\",\n      description: \"A Waterfall\",\n      artist: \"Valerie Brisendine\",\n    },\n    {\n      id: 7,\n      imageSrc: \"./images/PR_Bunnies.JPG\",\n      alt: \"Rolex\",\n      title: \"Rolex\",\n      description: \"Rolex Watch\",\n      artist: \"Valerie Brisendine\",\n    },\n    {\n      id: 8,\n      imageSrc: \"./images/PR_KamisakaSekka.JPG\",\n      alt: \"Person in snow\",\n      title: \"Kamisaka Sekka\",\n      description: \"A person walking through snow\",\n      pricingText: 120,\n      artist: \"Valerie Brisendine\",\n    },\n  ];\n\n  console.log(images);\n\n  return (\n    <div className=\"content\">\n      <h2>Showcase</h2>\n      <div className=\"controls\">\n        <button className=\"leftControl\" onClick={sliderRef?.slickPrev}>\n          <FaArrowAltCircleLeft />\n        </button>\n        <button className=\"rightControl\" onClick={sliderRef?.slickNext}>\n          <FaArrowAltCircleRight />\n        </button>\n      </div>\n      <Slider ref={setSliderRef} {...sliderSettings}>\n        {images.map((image, index) => (\n          <div key={index} className=\"artImageHolder\">\n            <img src={image.imageSrc} alt={image.title} className=\"art-image\" />\n            {/* <div className=\"text-info\"> */}\n            {/* <div className=\"art-header\"> */}\n            {/* <h2>{image.title}</h2> */}\n            {/* <span>{image.pricingText}</span> */}\n            {/* </div> */}\n            {/* <p>{image.description}</p> */}\n            {/* </div> */}\n            {/* <button>Buy Now</button> */}\n          </div>\n        ))}\n      </Slider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ArtworkList from \"../components/ArtworkList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\nimport ImageCarousel from \"../components/Carousel/ImageCarousel\";\n\nconst Home = () => {\n  return (\n    <div className=\"container, img-container\">\n      <ImageCarousel />\n      <CategoryMenu />\n      <ArtworkList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nimport Cart from \"../components/Cart\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_ARTWORKS,\n} from \"../utils/actions\";\nimport { QUERY_ARTWORKS } from \"../utils/queries\";\nimport { idbPromise } from \"../utils/helpers\";\nimport spinner from \"../assets/spinner.gif\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentArtwork, setCurrentArtwork] = useState({});\n\n  const { loading, data } = useQuery(QUERY_ARTWORKS);\n\n  const { artworks, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (artworks.length) {\n      setCurrentArtwork(artworks.find((artwork) => artwork._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_ARTWORKS,\n        artworks: data.artworks,\n      });\n\n      data.artworks.forEach((artwork) => {\n        idbPromise(\"artworks\", \"put\", artwork);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise(\"artworks\", \"get\").then((indexedArtworks) => {\n        dispatch({\n          type: UPDATE_ARTWORKS,\n          artworks: indexedArtworks,\n        });\n      });\n    }\n  }, [artworks, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise(\"cart\", \"put\", {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        artwork: { ...currentArtwork, purchaseQuantity: 1 },\n      });\n      idbPromise(\"cart\", \"put\", { ...currentArtwork, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentArtwork._id,\n    });\n\n    idbPromise(\"cart\", \"delete\", { ...currentArtwork });\n  };\n\n  return (\n    <>\n      {currentArtwork && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Art</Link>\n\n          <h2>{currentArtwork.name}</h2>\n\n          <p>{currentArtwork.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentArtwork.price}{\" \"}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentArtwork._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentArtwork.image}`}\n            alt={currentArtwork.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($artworks: [ID]!) {\n    addOrder(artworks: $artworks) {\n      purchaseDate\n      artworks {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Link } from \"react-router-dom\";\nimport { LOGIN } from \"../utils/mutations\";\nimport Auth from \"../utils/auth\";\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">\n              The user email or password is incorrect\n            </p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Past Orders</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/contactForm\">Contact Us</Link>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"nav\">\n          <li className=\"\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n          <li className=\"\">\n            <Link to=\"/contactForm\">Contact</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"\">\n            <img src=\"client\\public\\AU.png\" alt=\"\" />\n          </span>\n          ART <em>underground</em>\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const artworks = cart.map((item) => item._id);\n\n      if (artworks.length) {\n        const { data } = await addOrder({ variables: { artworks } });\n        const artworkData = data.addOrder.artworks;\n\n        artworkData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER } from \"../utils/queries\";\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Artworks</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Past orders for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.artworks.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/artworks/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import { useForm } from \"react-hook-form\";\nimport emailjs from \"emailjs-com\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\n\nconst ContactForm = () => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const toastifySuccess = () => {\n    toast(\"Form sent!\", {\n      position: \"bottom-left\",\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: false,\n      className: \"submit-feedback success\",\n      toastId: \"notifyToast\",\n    });\n  };\n\n  const onSubmit = async (data) => {\n    const { name, email, subject, message } = data;\n\n    try {\n      const templateParams = {\n        name,\n        email,\n        subject,\n        message,\n      };\n      await emailjs.send(\n        process.env.REACT_APP_SERVICE_ID,\n        process.env.REACT_APP_TEMPLATE_ID,\n        templateParams,\n        process.env.REACT_APP_USER_ID\n      );\n      reset();\n      toastifySuccess();\n    } catch (e) {\n      console.log(e);\n    }\n\n    console.log(\"Name: \", name);\n    console.log(\"Email: \", email);\n    console.log(\"Subject: \", subject);\n    console.log(\"Message: \", message);\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 text-center\">\n            <div className=\"contactForm\">\n              <form\n                id=\"contact-form\"\n                onSubmit={handleSubmit(onSubmit)}\n                noValidate\n              >\n                {/* Row 1 of form */}\n                <div className=\"row formRow\">\n                  <h3>Are you a local Dallas artist looking for exposure?</h3>\n                  <h4>\n                    We are always looking for new local artists to feature!{\" \"}\n                    <br></br>Contact us!\n                  </h4>\n                  <div className=\"col-6\">\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      {...register(\"name\", {\n                        required: {\n                          value: true,\n                          message: \"Please enter your name\",\n                        },\n                        maxLength: {\n                          value: 30,\n                          message: \"Please use 30 characters or less\",\n                        },\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Name\"\n                    ></input>\n                    {errors.name && (\n                      <span className=\"errorMessage\">\n                        {errors.name.message}\n                      </span>\n                    )}\n                  </div>\n                  <div className=\"col-6\">\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      {...register(\"email\", {\n                        required: true,\n                        pattern:\n                          /^[a-zA-Z0-9.!#$%&*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Email address\"\n                    ></input>\n                    {errors.email && (\n                      <span className=\"errorMessage\">\n                        Please enter a valid email address\n                      </span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 2 of form */}\n                <div className=\"flex-row space-between my-2\">\n                  <div className=\"col\">\n                    <input\n                      type=\"text\"\n                      name=\"subject\"\n                      {...register(\"subject\", {\n                        required: {\n                          value: true,\n                          message: \"Please enter a subject\",\n                        },\n                        maxLength: {\n                          value: 75,\n                          message: \"Subject cannot exceed 75 characters\",\n                        },\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Subject\"\n                    ></input>\n                    {errors.subject && (\n                      <span className=\"errorMessage\">\n                        {errors.subject.message}\n                      </span>\n                    )}\n                  </div>\n                </div>\n                {/* Row 3 of form */}\n                <div className=\"row formRow\">\n                  <div className=\"col\">\n                    <textarea\n                      rows={3}\n                      name=\"message\"\n                      {...register(\"message\", {\n                        required: true,\n                      })}\n                      className=\"form-control formInput\"\n                      placeholder=\"Message\"\n                    ></textarea>\n                    {errors.message && (\n                      <span className=\"errorMessage\">\n                        Please enter a message\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <button className=\"submit-btn\" type=\"submit\">\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Home from \"./pages/Home\";\nimport Detail from \"./pages/Detail\";\nimport Login from \"./pages/Login\";\nimport Signup from \"./pages/Signup\";\nimport Nav from \"./components/Nav\";\nimport { StoreProvider } from \"./utils/GlobalState\";\nimport Success from \"./pages/Success\";\nimport OrderHistory from \"./pages/OrderHistory\";\nimport ContactForm from \"./pages/ContactForm\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/contactForm\" component={ContactForm} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/artworks/:id\" component={Detail} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}